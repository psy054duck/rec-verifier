
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN DIV ELSE EQ FALSE GE GT IF LBRACK LE LPAREN LT MINUS MOD NUMBER OR PLUS RBRACK RPAREN SEMI TIMES TRUE VARIABLErecurrence : inits if_seqinits : transitionsif_seq : if_statementif_seq : if_statement ELSE if_seqif_seq : if_statement ELSE LBRACK transitions RBRACKif_statement : IF LPAREN cond RPAREN LBRACK transitions RBRACKcond : condocondo : conda OR condocondo : condaconda : atom_cond AND condaconda : atom_condatom_cond : expr EQ expratom_cond : expr GT expratom_cond : expr LT expratom_cond : expr GE expratom_cond : expr LE expratom_cond : TRUEatom_cond : FALSEtransitions : transition transitionstransitions : transition : VARIABLE ASSIGN expr SEMItransition : array_ref ASSIGN expr SEMIarray_ref : VARIABLE array_indexarray_index : LPAREN expr RPAREN array_indexarray_index : LPAREN expr RPARENexpr : factor PLUS exprexpr : factor MINUS exprexpr : factorfactor : factor TIMES operandfactor : factor DIV operandfactor : factor MOD operandfactor : operandoperand : VARIABLEoperand : NUMBERoperand : array_refoperand : LPAREN expr RPAREN'
    
_lr_action_items = {'IF':([0,2,3,4,10,15,35,43,],[-20,9,-2,-20,-19,9,-21,-22,]),'VARIABLE':([0,4,11,13,14,16,23,27,35,36,37,38,39,40,43,46,47,48,49,50,51,52,61,],[5,5,17,17,17,17,17,5,-21,17,17,17,17,17,-22,17,17,17,17,17,17,17,5,]),'$end':([1,7,8,26,60,70,],[0,-1,-3,-4,-5,-6,]),'RBRACK':([4,10,27,35,43,44,61,69,],[-20,-19,-20,-21,-22,60,-20,70,]),'ASSIGN':([5,6,12,42,59,],[11,14,-23,-25,-24,]),'LPAREN':([5,9,11,13,14,16,17,23,36,37,38,39,40,42,46,47,48,49,50,51,52,],[13,16,23,23,23,23,13,23,23,23,23,23,23,13,23,23,23,23,23,23,23,]),'ELSE':([8,70,],[15,-6,]),'NUMBER':([11,13,14,16,23,36,37,38,39,40,46,47,48,49,50,51,52,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'PLUS':([12,17,19,20,21,22,42,55,56,57,58,59,],[-23,-33,36,-32,-34,-35,-25,-29,-30,-31,-36,-24,]),'MINUS':([12,17,19,20,21,22,42,55,56,57,58,59,],[-23,-33,37,-32,-34,-35,-25,-29,-30,-31,-36,-24,]),'TIMES':([12,17,19,20,21,22,42,55,56,57,58,59,],[-23,-33,38,-32,-34,-35,-25,-29,-30,-31,-36,-24,]),'DIV':([12,17,19,20,21,22,42,55,56,57,58,59,],[-23,-33,39,-32,-34,-35,-25,-29,-30,-31,-36,-24,]),'MOD':([12,17,19,20,21,22,42,55,56,57,58,59,],[-23,-33,40,-32,-34,-35,-25,-29,-30,-31,-36,-24,]),'SEMI':([12,17,18,19,20,21,22,25,42,53,54,55,56,57,58,59,],[-23,-33,35,-28,-32,-34,-35,43,-25,-26,-27,-29,-30,-31,-36,-24,]),'RPAREN':([12,17,19,20,21,22,24,28,29,30,31,33,34,41,42,53,54,55,56,57,58,59,62,63,64,65,66,67,68,],[-23,-33,-28,-32,-34,-35,42,45,-7,-9,-11,-17,-18,58,-25,-26,-27,-29,-30,-31,-36,-24,-8,-10,-12,-13,-14,-15,-16,]),'EQ':([12,17,19,20,21,22,32,42,53,54,55,56,57,58,59,],[-23,-33,-28,-32,-34,-35,48,-25,-26,-27,-29,-30,-31,-36,-24,]),'GT':([12,17,19,20,21,22,32,42,53,54,55,56,57,58,59,],[-23,-33,-28,-32,-34,-35,49,-25,-26,-27,-29,-30,-31,-36,-24,]),'LT':([12,17,19,20,21,22,32,42,53,54,55,56,57,58,59,],[-23,-33,-28,-32,-34,-35,50,-25,-26,-27,-29,-30,-31,-36,-24,]),'GE':([12,17,19,20,21,22,32,42,53,54,55,56,57,58,59,],[-23,-33,-28,-32,-34,-35,51,-25,-26,-27,-29,-30,-31,-36,-24,]),'LE':([12,17,19,20,21,22,32,42,53,54,55,56,57,58,59,],[-23,-33,-28,-32,-34,-35,52,-25,-26,-27,-29,-30,-31,-36,-24,]),'AND':([12,17,19,20,21,22,31,33,34,42,53,54,55,56,57,58,59,64,65,66,67,68,],[-23,-33,-28,-32,-34,-35,47,-17,-18,-25,-26,-27,-29,-30,-31,-36,-24,-12,-13,-14,-15,-16,]),'OR':([12,17,19,20,21,22,30,31,33,34,42,53,54,55,56,57,58,59,63,64,65,66,67,68,],[-23,-33,-28,-32,-34,-35,46,-11,-17,-18,-25,-26,-27,-29,-30,-31,-36,-24,-10,-12,-13,-14,-15,-16,]),'LBRACK':([15,45,],[27,61,]),'TRUE':([16,46,47,],[33,33,33,]),'FALSE':([16,46,47,],[34,34,34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'recurrence':([0,],[1,]),'inits':([0,],[2,]),'transitions':([0,4,27,61,],[3,10,44,69,]),'transition':([0,4,27,61,],[4,4,4,4,]),'array_ref':([0,4,11,13,14,16,23,27,36,37,38,39,40,46,47,48,49,50,51,52,61,],[6,6,22,22,22,22,22,6,22,22,22,22,22,22,22,22,22,22,22,22,6,]),'if_seq':([2,15,],[7,26,]),'if_statement':([2,15,],[8,8,]),'array_index':([5,17,42,],[12,12,59,]),'expr':([11,13,14,16,23,36,37,46,47,48,49,50,51,52,],[18,24,25,32,41,53,54,32,32,64,65,66,67,68,]),'factor':([11,13,14,16,23,36,37,46,47,48,49,50,51,52,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'operand':([11,13,14,16,23,36,37,38,39,40,46,47,48,49,50,51,52,],[20,20,20,20,20,20,20,55,56,57,20,20,20,20,20,20,20,]),'cond':([16,],[28,]),'condo':([16,46,],[29,62,]),'conda':([16,46,47,],[30,30,63,]),'atom_cond':([16,46,47,],[31,31,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> recurrence","S'",1,None,None,None),
  ('recurrence -> inits if_seq','recurrence',2,'p_recurrence','parser.py',9),
  ('inits -> transitions','inits',1,'p_inits','parser.py',17),
  ('if_seq -> if_statement','if_seq',1,'p_if_seq_1','parser.py',22),
  ('if_seq -> if_statement ELSE if_seq','if_seq',3,'p_if_seq_2','parser.py',27),
  ('if_seq -> if_statement ELSE LBRACK transitions RBRACK','if_seq',5,'p_if_seq_3','parser.py',32),
  ('if_statement -> IF LPAREN cond RPAREN LBRACK transitions RBRACK','if_statement',7,'p_if_statement','parser.py',37),
  ('cond -> condo','cond',1,'p_cond_1','parser.py',42),
  ('condo -> conda OR condo','condo',3,'p_condo_1','parser.py',47),
  ('condo -> conda','condo',1,'p_condo_2','parser.py',52),
  ('conda -> atom_cond AND conda','conda',3,'p_conda_1','parser.py',57),
  ('conda -> atom_cond','conda',1,'p_conda_2','parser.py',62),
  ('atom_cond -> expr EQ expr','atom_cond',3,'p_atom_cond_1','parser.py',67),
  ('atom_cond -> expr GT expr','atom_cond',3,'p_atom_cond_2','parser.py',72),
  ('atom_cond -> expr LT expr','atom_cond',3,'p_atom_cond_3','parser.py',77),
  ('atom_cond -> expr GE expr','atom_cond',3,'p_atom_cond_4','parser.py',82),
  ('atom_cond -> expr LE expr','atom_cond',3,'p_atom_cond_5','parser.py',87),
  ('atom_cond -> TRUE','atom_cond',1,'p_atom_cond_6','parser.py',92),
  ('atom_cond -> FALSE','atom_cond',1,'p_atom_cond_7','parser.py',97),
  ('transitions -> transition transitions','transitions',2,'p_transitions_1','parser.py',102),
  ('transitions -> <empty>','transitions',0,'p_transitions_2','parser.py',107),
  ('transition -> VARIABLE ASSIGN expr SEMI','transition',4,'p_transition_1','parser.py',112),
  ('transition -> array_ref ASSIGN expr SEMI','transition',4,'p_transition_2','parser.py',117),
  ('array_ref -> VARIABLE array_index','array_ref',2,'p_array_ref','parser.py',122),
  ('array_index -> LPAREN expr RPAREN array_index','array_index',4,'p_array_index_1','parser.py',128),
  ('array_index -> LPAREN expr RPAREN','array_index',3,'p_array_index_2','parser.py',133),
  ('expr -> factor PLUS expr','expr',3,'p_expr_1','parser.py',138),
  ('expr -> factor MINUS expr','expr',3,'p_expr_2','parser.py',143),
  ('expr -> factor','expr',1,'p_expr_3','parser.py',148),
  ('factor -> factor TIMES operand','factor',3,'p_factor_1','parser.py',153),
  ('factor -> factor DIV operand','factor',3,'p_factor_2','parser.py',158),
  ('factor -> factor MOD operand','factor',3,'p_factor_3','parser.py',163),
  ('factor -> operand','factor',1,'p_factor_4','parser.py',168),
  ('operand -> VARIABLE','operand',1,'p_operand_1','parser.py',173),
  ('operand -> NUMBER','operand',1,'p_operand_2','parser.py',178),
  ('operand -> array_ref','operand',1,'p_operand_3','parser.py',183),
  ('operand -> LPAREN expr RPAREN','operand',3,'p_operand_4','parser.py',188),
]
